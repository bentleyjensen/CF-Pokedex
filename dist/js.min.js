const pokedex = (() => { let e = []; const t = 'https://pokeapi.co/api/v2/pokemon/?limit=150'; return { fetchRemoteList: function() { const e = document.querySelector('#pokemon-list'); return htmlGenerator.showLoadingMessage(e), fetch(t).then(e => e.json()).then(e => { e.results.forEach(e => { const t = { name: e.name, detailUrl: e.url }; pokedex.addToPokedex(t) || console.error('Error adding pokemon:', t); }); }).then(() => { htmlGenerator.hideLoadingMessage(e); }).catch(t => { htmlGenerator.hideLoadingMessage(e), console.error(t); }); }, fetchRemoteDetails: function(e) { return new Promise((t, o) => { if ('string' == typeof e && (e = pokedex.get(e.toLowerCase())[0]), void 0 === e.detailUrl) return o('pokemon did not have a detailUrl to fetch'); fetch(e.detailUrl).then(e => e.json()).then(o => (e.imageUrl = o.sprites.front_default, e.height = o.height, e.types = o.types, t(e))).catch(e => o(e)); }); }, addToPokedex: function(t) { return !(!t.name || !t.detailUrl || 2 !== Object.keys(t).length || (e.push(t), 0)); }, getAll: function() { return e; }, get: function(t) { return 'string' != typeof t ? (console.log('Could not get pokemon: name was not of type \'string\''), []) : e.filter(e => e.name === t); }, remove: function(t) { return 'string' == typeof t && (e = e.filter(e => e.name !== t), !0); }, clear: function() { e = []; }, addToPage: function(e) { const t = document.querySelector('#pokemon-list'), o = document.createElement('div'); o.classList.add('col-xs'), o.classList.add('col-sm-6'), o.classList.add('col-md-4'), o.classList.add('col-lg-3'), o.classList.add('col-xl-2'); const n = htmlGenerator.pokemonButton(e); n.classList.add('pokemon-button'), o.appendChild(n), t.appendChild(o); }, capitalize: function(e) { let t = ''; return (t = 'object' == typeof e ? e.name : e)[0].toUpperCase() + t.slice(1); } }; })(), htmlGenerator = (() => { return { showLoadingMessage: function(e) { const t = document.createElement('img'); t.classList.add('loading-gif'), t.src = 'img/loading.gif', e.appendChild(t); }, hideLoadingMessage: function(e) { const t = e.querySelector('.loading-gif'); t && t.remove(); }, pokemonButton: function(e) { const t = document.createElement('button'); return t.textContent = pokedex.capitalize(e), t.classList.add('pokemon-button'), t.classList.add('btn'), t.classList.add('btn-primary'), t.classList.add('my-1'), t.setAttribute('data-bs-toggle', 'modal'), t.setAttribute('data-bs-target', '#pokemonDetailsModal'), t.setAttribute('data-bs-pokemon', e.name), t; }, pokemonDetails: function(e) { const t = document.createElement('div'); t.classList.add('pokemon-details'), t.classList.add('container'); const o = document.createElement('div'); o.classList.add('row'); const n = document.createElement('img'); n.classList.add('img-fluid'), n.classList.add('border'), n.classList.add('border-2'), n.classList.add('col-xs-8'), n.classList.add('col-sm-6'), n.classList.add('col-md-5'), n.classList.add('col-lg-4'), n.classList.add('col-xl-3'), n.src = e.imageUrl, o.appendChild(n), t.appendChild(o); const a = document.createElement('div'); a.classList.add('row'); const d = document.createElement('p'); d.classList.add('col'), d.innerHTML = `Height: ${e.height} decimeters`, a.appendChild(d), t.appendChild(a); const l = document.createElement('div'); l.classList.add('row'); const s = document.createElement('h6'); s.classList.add('col'), s.innerHTML = 'Types', l.appendChild(s); const c = document.createElement('ul'); return c.classList.add('list-group'), e.types.forEach(e => { const t = document.createElement('li'); t.classList.add('pokemon-type-li'), t.classList.add('list-group-item'), t.innerHTML = pokedex.capitalize(e.type.name), c.appendChild(t); }), l.appendChild(c), t.appendChild(l), t; }, clearList: function() { document.querySelector('#pokemon-list').innerHTML = ''; } }; })(), modalController = (() => { const e = document.querySelector('#modal-title'), t = document.querySelector('#modal-body'); return { populateModal: function(e) { const t = e.relatedTarget.getAttribute('data-bs-pokemon'); pokedex.fetchRemoteDetails(t).then(e => { document.querySelector('.modal-title').textContent = pokedex.capitalize(t); const o = document.querySelector('.modal-body'); o.innerHTML = '', o.appendChild(htmlGenerator.pokemonDetails(e)); }).catch(e => { console.log('Error when loading modal', t, e); }); }, clearModal: function() { e.innerHTML = 'Default Modal Title', t.innerHTML = '', htmlGenerator.showLoadingMessage(t); } }; })(); pokedex.fetchRemoteList().then(() => { pokedex.getAll().forEach(pokedex.addToPage); }).then(() => { const e = document.querySelector('#pokemonDetailsModal'); e.addEventListener('show.bs.modal', modalController.populateModal), e.addEventListener('hide.bs.modal', modalController.clearModal); const t = document.querySelector('#fetchPokedex'), o = document.querySelector('#confirmConfirm'); t.addEventListener('click', () => { pokedex.fetchRemoteList().then(() => { pokedex.getAll().forEach(pokedex.addToPage); }).catch(e => { console.log('Error fetching remote list', e); }); }), o.addEventListener('click', () => { pokedex.clear(), htmlGenerator.clearList(); }); }).catch(e => { console.error('Error with inital load'), console.error(e); });
